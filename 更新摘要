# migrate使用方法
1.  添加配置

	

``` php
'MIGRATE' => [
	//模型目录
	'MODEL_PATH' => 'app\Model',
	//模型目录命名空间
	'MODEL_NAMESPACE' => 'App\Model',
	//顶级模型,迁移工具会递归寻找该模型的所有后代进行创建
	'BASE_MODEL' => App\Model\Model::class,
	//数据库配置,可获取MYSQL的配置键(string)或者数组(array)形式的MYSQL配置,其配置必须包含(host, user, password, database, port)
	'MYSQL_CONFIG' => 'MYSQL'
	]
```


2.  创建模型并继承```EasySwoole\EasySwoole\Command\DefaultCommand\Migrate\MigrateModel```实现其中三个抽象方法

```php
protected function table()
{
    // TODO: Implement table() method.
    $this->table = 'user';
}

protected function primaryKey()
{
    // TODO: Implement primaryKey() method.
    $this->primaryKey = 'id';
}

protected function bean()
{
    // TODO: Implement bean() method.
    $this->bean = UserBean::class;
}
```

3. 在bean文件中写对应迁移规则

```php
/**
 * @var
 * @primary         true
 * @type            int
 * @typeLength      11
 * @notNull         true
 * @autoIncrement   true
 * @comment         主键
 */
protected $id;

/**
 * @type            varchar
 * @typeLength      50
 * @notNull         true
 * @comment         名称
 *
 */
protected $name;

/**
 * @type        varchar
 * @typeLength  10
 * @notNull     true
 * @index       true
 * @indexType   unique
 * @indexMethod btree
 * @comment     用户编码
 */
protected $code;

/**
 * @type            decimal
 * @typeLength      10
 * @typeFloat       4
 * @notNull         true
 * @comment         用户余额
 */
protected $money;
```
                
4. 迁移规则介绍,没有相关项可不设置
	-  primary
	   -  是否主键
	   -  true | false
	-  autoIncrement
	   -  是否自增
	   -  true | false
	-  notNull
	   -  是否为空
	   -  true | false
	-  type
	   -  数据类型
	   -  int数字
	-  typeLength
	   -  类型整数长度
	   -  int数字
	-  typeFloat
	   -  类型浮点长度
	   -  int数字
	-  index
	   -  是否为该字段添加索引
	   -  true | false
	-  indexType
	   -  索引类型
	   -  normal | unique | fulltext(当为此项时IndexMethod无效)
	-  indexMethod
	   -  索引方法
	   -  btree | hash
	- comment
	   -  注释
	   -  string注释    
	   
5. 运行命令 ```php easyswoole migrate user```查看迁移结果	   
